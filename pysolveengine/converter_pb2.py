# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: converter.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='converter.proto',
  package='solver.converter',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x63onverter.proto\x12\x10solver.converter\"\x80\x01\n\x06Result\x12\x0e\n\x06status\x18\x01 \x01(\t\x12*\n\x0fobjective_value\x18\x02 \x01(\x01H\x00R\x0fobjective_value\x12-\n\tvariables\x18\x03 \x03(\x0b\x32\x1a.solver.converter.VariableB\x0b\n\tobj_value\"0\n\x08Variable\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x05value\x18\x02 \x01(\x01H\x00\x42\x05\n\x03valB\x07Z\x05protob\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='solver.converter.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='solver.converter.Result.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objective_value', full_name='solver.converter.Result.objective_value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='objective_value'),
    _descriptor.FieldDescriptor(
      name='variables', full_name='solver.converter.Result.variables', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='obj_value', full_name='solver.converter.Result.obj_value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=38,
  serialized_end=166,
)


_VARIABLE = _descriptor.Descriptor(
  name='Variable',
  full_name='solver.converter.Variable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='solver.converter.Variable.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='solver.converter.Variable.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='val', full_name='solver.converter.Variable.val',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=168,
  serialized_end=216,
)

_RESULT.fields_by_name['variables'].message_type = _VARIABLE
_RESULT.oneofs_by_name['obj_value'].fields.append(
  _RESULT.fields_by_name['objective_value'])
_RESULT.fields_by_name['objective_value'].containing_oneof = _RESULT.oneofs_by_name['obj_value']
_VARIABLE.oneofs_by_name['val'].fields.append(
  _VARIABLE.fields_by_name['value'])
_VARIABLE.fields_by_name['value'].containing_oneof = _VARIABLE.oneofs_by_name['val']
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['Variable'] = _VARIABLE

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'converter_pb2'
  # @@protoc_insertion_point(class_scope:solver.converter.Result)
  ))
_sym_db.RegisterMessage(Result)

Variable = _reflection.GeneratedProtocolMessageType('Variable', (_message.Message,), dict(
  DESCRIPTOR = _VARIABLE,
  __module__ = 'converter_pb2'
  # @@protoc_insertion_point(class_scope:solver.converter.Variable)
  ))
_sym_db.RegisterMessage(Variable)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\005proto'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
